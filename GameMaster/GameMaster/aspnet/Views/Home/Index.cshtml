@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <div class="row d-flex">
        <div class="col-sm-3"></div>
        <table class="col-sm-6"><tbody id="gameBoard"></tbody></table>
        <div class="col-sm-3"></div>
    </div>
</div>

@section scripts {
    <script type="text/javascript">
        var columns;
        var rows;
        var goalAreaHeight;
        var boardFields;
        function ConstructBoard() {
            var table = $("#gameBoard");
            //table.remove();
            for (var i = 0; i < rows; i++) {
                var row = $('<tr>');
                for (var j = 0; j < columns; j++) {
                    var column = $('<td>');
                    column.text("(" + i + ", " + j + ")");
                    row.append(column);
                    boardFields[i][j].handle = column;
                }
                table.append(row);
            }
        }
        function ColorBoard() {
            for (var i = 0; i < rows; i++) {
                for (var j = 0; j < columns; j++) {
                    boardFields[i][j].handle.text(boardFields[i][j].type.text);
                    boardFields[i][j].handle.addClass(boardFields[i][j].type.class);
                    if (i < goalAreaHeight)
                        boardFields[i][j].handle.addClass("redGoalArea");
                    else if(i >= rows - goalAreaHeight)
                        boardFields[i][j].handle.addClass("blueGoalArea");
                }
            }
        }
        function FetchBoard() {
            var uri = "/api/Board";
            $.ajax({
                url: uri
            }).done(function (boardModel) {
                columns = boardModel.width;
                rows = boardModel.height;
                goalAreaHeight = boardModel.goalAreaHeight;
                boardFields = [];
                for (var i = 0; i < rows; i++) {
                    boardFields[i] = [];
                    for (var j = 0; j < columns; j++) {
                        boardFields[i][j] =
                            { type: FieldTypesIndexed[boardModel.fields[i][j]], handle: null };
                    }
                }
                ConstructBoard();
                ColorBoard();
            });
        }
        const FieldTypes = {
            EMPTY: { class: "empty", text: "" },
            RED_PLAYER: { class: "redPlayer", text: "R" },
            BLUE_PLAYER: { class: "bluePlayer", text: "B" },
            RED_PLAYER_WITH_PIECE: { class: "redPlayerWithPiece", text: "RP" },
            BLUE_PLAYER_WITH_PIECE: { class: "bluePlayerWithPiece", text: "BP" },
            PIECE: { class: "piece", text: "P" },
            GOAL: { class: "goal", text: "G" },
            DISCOVERED_NON_GOAL: { class: "discoveredNonGoal", text: "N" },
            DISCOVERED_GOAL: { class: "discoveredGoal", text: "YG" },
        };
        const FieldTypesIndexed = [
            FieldTypes.EMPTY, FieldTypes.RED_PLAYER, FieldTypes.BLUE_PLAYER,
            FieldTypes.RED_PLAYER_WITH_PIECE, FieldTypes.BLUE_PLAYER_WITH_PIECE,
            FieldTypes.PIECE, FieldTypes.GOAL,
            FieldTypes.DISCOVERED_NON_GOAL, FieldTypes.DISCOVERED_GOAL
        ];
        FetchBoard();
    </script>
}
